{# Copyright 2020 Curtin University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Author: Richard Hosking #}
{#
The purpose of this script it to export the book author metrics from the book_product table
Primarily, the goal is to create a flat structure which is suitable for graphing in Kibana
#}

CREATE TEMP FUNCTION group_counts(counts ARRAY<STRUCT<name STRING, value INT64>>) AS (
  (SELECT
    SUM(value) as value
  FROM UNNEST(counts))
);

SELECT
    author.PersonName,
    MAX(author.PersonNameInverted) as PersonNameInverted,
    MAX(author.ORCID) as orcid,
    count(ISBN13) as unique_books,
    month.month,
    {% for dp in data_partners %}
        {% if dp.month_metrics_sum %}
            {% include dp.month_metrics_sum %},
        {% endif %}
    {% endfor %}
    STRUCT(group_counts(ARRAY_CONCAT_AGG(month.crossref_events)) as count) as crossref_events
FROM `{{ book_product_table_id }}`, UNNEST(onix.authors) as author, UNNEST(months) as month
WHERE 
    {% for dp in data_partners %}
        {% if dp.month_metrics_sum %}
            {% include dp.month_mull %} OR
        {% endif %}
    {% endfor %}
ARRAY_LENGTH(month.crossref_events) > 0
GROUP BY author.PersonName, month
ORDER BY author.PersonName ASC, month DESC

