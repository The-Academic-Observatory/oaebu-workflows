# The purpose of this block of SQL is to organise the metrics from google book sales for easier consumption of downstream queries.
# Defined in the create_oaebu_book_product_table method, in onix_workflow.py, is the value of 'google_books_sales_table_id'.
# This will either point to 'empty_google_books_sales' (defined above as an empty row) or the name of the real data table in bigquery.
# The reason for the choice of selecting an empty row, is that some partners will not have corresponding data to query.
# Providng an empty row enable simplicity of the downstream queries and also means the resulting schema across all publishers is the same.
google_books_sales_metrics as (
    SELECT
        Primary_ISBN as ISBN13,
        release_date,
        STRUCT(
            SUM(qty) as qty,
            group_items_google_books_sales(ARRAY_AGG(STRUCT(Country_of_Sale, qty))) as countries
        ) as metrics
    FROM
        `{{ google_books_sales_table_id }}`
    GROUP BY
        Primary_ISBN,
        release_date
),

# The purpose of this block of SQL is to organise the Metadata from google book sales for easier consumption of downstream queries.
# Defined in the create_oaebu_book_product_table method, in onix_workflow.py, is the value of 'google_books_sales_table_id'.
# This will either point to 'empty_google_books_sales' (defined above as an empty row) or the name of the real data table in bigquery.
# The reason for the choice of selecting an empty row, is that some partners will not have corresponding data to query.
# Providng an empty row enable simplicity of the downstream queries and also means the resulting schema across all publishers is the same.
google_books_sales_metadata as (
    SELECT
        Primary_ISBN as ISBN13,
        MAX(Imprint_Name) as Imprint_Name,
        MAX(Title) as Title,
        MAX(Author) as Author
    FROM
        `{{ google_books_sales_table_id }}`
    GROUP BY
        Primary_ISBN
)