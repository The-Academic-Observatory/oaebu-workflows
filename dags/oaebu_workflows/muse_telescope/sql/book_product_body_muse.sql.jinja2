# The purpose of this block of SQL is to organise the metrics from MUSE for easier consumption of downstream queries.
# Defined in the create_oaebu_book_product_table method, in onix_workflow.py, is the value of 'muse_table_id'.
muse_country_metrics as (
    SELECT
        isbn as ISBN13,
        release_date,
        group_items_muse_country(
            ARRAY_AGG(STRUCT(country, usage))
        ) as metrics
    FROM
        `{{ muse_table_id }}`
    GROUP BY
        eISBN,
        release_date
),

# The purpose of this block of SQL is to organise the Metadata from MUSE country for easier consumption of downstream queries.
# Defined in the create_oaebu_book_product_table method, in onix_workflow.py, is the value of 'muse_table_id'.
# TODO: Pretty sure this isn't usable, need to double check.
#
# muse_country_metadata as (
#     SELECT
#         isbn as ISBN13,
#         MAX(Book_Title) as Book_Title,
#         MAX(Book_ID) as Book_ID,
#         MAX(Authors) as Authors,
#         MAX(ISBN) as ISBN,
#         eISBN,
#         MAX(Copyright_Year) as Copyright_Year,
#         MAX(Disciplines) as Disciplines,
#         MAX(Usage_Type) as Usage_Type
#     FROM
#         `{{ muse_country_table_id }}`
#     GROUP BY
#         eISBN
# )

# The purpose of this block of SQL is to organise the metrics from JSTOR institution for easier consumption of downstream queries.
# Defined in the create_oaebu_book_product_table method, in onix_workflow.py, is the value of 'muse_institution_table_id'.
muse_institution_metrics as (
    SELECT
        isbn as ISBN13,
        release_date,
        group_items_muse_institution(
            ARRAY_AGG(STRUCT(institution, usage))
        ) as metrics
    FROM
        `{{ muse_table_id }}`
    GROUP BY
        isbn,
        release_date
),

# The purpose of this block of SQL is to organise the Metadata from JSTOR institution for easier consumption of downstream queries.
# Defined in the create_oaebu_book_product_table method, in onix_workflow.py, is the value of 'muse_institution_table_id'.
# TODO: Pretty sure this isn't usable, need to double check.
#
# muse_institution_metadata as (
#     SELECT
#         eISBN as ISBN13,
#         MAX(Book_Title) as Book_Title,
#         MAX(Book_ID) as Book_ID,
#         MAX(Authors) as Authors,
#         MAX(ISBN) as ISBN,
#         eISBN,
#         MAX(Copyright_Year) as Copyright_Year,
#         MAX(Disciplines) as Disciplines,
#         MAX(Usage_Type) as Usage_Type
#     FROM
#         `{{ muse_institution_table_id }}`
#     GROUP BY
#         eISBN
# )
